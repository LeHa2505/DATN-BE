/*
 * This file is generated by jOOQ.
 */
package cfm.onthi.entities.tables;


import cfm.onthi.entities.Keys;
import cfm.onthi.entities.SOnthi;
import cfm.onthi.entities.tables.records.OtMenuRecord;

import java.time.LocalDateTime;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function15;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OtMenu extends TableImpl<OtMenuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>s_onthi.ot_menu</code>
     */
    public static final OtMenu OT_MENU = new OtMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OtMenuRecord> getRecordType() {
        return OtMenuRecord.class;
    }

    /**
     * The column <code>s_onthi.ot_menu.ID_MENU</code>.
     */
    public final TableField<OtMenuRecord, Long> ID_MENU = createField(DSL.name("ID_MENU"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_BADGE</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_BADGE = createField(DSL.name("MENU_BADGE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_BADGE_CLASS</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_BADGE_CLASS = createField(DSL.name("MENU_BADGE_CLASS"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_ICON</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_ICON = createField(DSL.name("MENU_ICON"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_NAME</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_NAME = createField(DSL.name("MENU_NAME"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_ORDER</code>.
     */
    public final TableField<OtMenuRecord, Long> MENU_ORDER = createField(DSL.name("MENU_ORDER"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_PARENT</code>.
     */
    public final TableField<OtMenuRecord, Long> MENU_PARENT = createField(DSL.name("MENU_PARENT"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_PRJ_NAME</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_PRJ_NAME = createField(DSL.name("MENU_PRJ_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_ROUTER_LINK</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_ROUTER_LINK = createField(DSL.name("MENU_ROUTER_LINK"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_TARGET</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_TARGET = createField(DSL.name("MENU_TARGET"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>s_onthi.ot_menu.MENU_URL</code>.
     */
    public final TableField<OtMenuRecord, String> MENU_URL = createField(DSL.name("MENU_URL"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>s_onthi.ot_menu.ACTIVE</code>.
     */
    public final TableField<OtMenuRecord, Boolean> ACTIVE = createField(DSL.name("ACTIVE"), SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>s_onthi.ot_menu.CREATED_DATE</code>.
     */
    public final TableField<OtMenuRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("CREATED_DATE"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>s_onthi.ot_menu.LAST_MODIFIED_BY</code>.
     */
    public final TableField<OtMenuRecord, String> LAST_MODIFIED_BY = createField(DSL.name("LAST_MODIFIED_BY"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>s_onthi.ot_menu.LAST_MODIFIED_DATE</code>.
     */
    public final TableField<OtMenuRecord, LocalDateTime> LAST_MODIFIED_DATE = createField(DSL.name("LAST_MODIFIED_DATE"), SQLDataType.LOCALDATETIME(6), this, "");

    private OtMenu(Name alias, Table<OtMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private OtMenu(Name alias, Table<OtMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>s_onthi.ot_menu</code> table reference
     */
    public OtMenu(String alias) {
        this(DSL.name(alias), OT_MENU);
    }

    /**
     * Create an aliased <code>s_onthi.ot_menu</code> table reference
     */
    public OtMenu(Name alias) {
        this(alias, OT_MENU);
    }

    /**
     * Create a <code>s_onthi.ot_menu</code> table reference
     */
    public OtMenu() {
        this(DSL.name("ot_menu"), null);
    }

    public <O extends Record> OtMenu(Table<O> child, ForeignKey<O, OtMenuRecord> key) {
        super(child, key, OT_MENU);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : SOnthi.S_ONTHI;
    }

    @Override
    public Identity<OtMenuRecord, Long> getIdentity() {
        return (Identity<OtMenuRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<OtMenuRecord> getPrimaryKey() {
        return Keys.KEY_OT_MENU_PRIMARY;
    }

    @Override
    public OtMenu as(String alias) {
        return new OtMenu(DSL.name(alias), this);
    }

    @Override
    public OtMenu as(Name alias) {
        return new OtMenu(alias, this);
    }

    @Override
    public OtMenu as(Table<?> alias) {
        return new OtMenu(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OtMenu rename(String name) {
        return new OtMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OtMenu rename(Name name) {
        return new OtMenu(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OtMenu rename(Table<?> name) {
        return new OtMenu(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, String, String, String, String, Long, Long, String, String, String, String, Boolean, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function15<? super Long, ? super String, ? super String, ? super String, ? super String, ? super Long, ? super Long, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super LocalDateTime, ? super String, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function15<? super Long, ? super String, ? super String, ? super String, ? super String, ? super Long, ? super Long, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super LocalDateTime, ? super String, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
