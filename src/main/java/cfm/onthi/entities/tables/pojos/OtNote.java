/*
 * This file is generated by jOOQ.
 */
package cfm.onthi.entities.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "ot_note",
    schema = "s_onthi"
)
public class OtNote implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long idNote;
    private Long idUser;
    private Long idLesson;
    private String content;
    private Double noteTime;
    private LocalDateTime createdDate;
    private String lastModifiedBy;
    private LocalDateTime lastModifiedDate;

    public OtNote() {}

    public OtNote(OtNote value) {
        this.idNote = value.idNote;
        this.idUser = value.idUser;
        this.idLesson = value.idLesson;
        this.content = value.content;
        this.noteTime = value.noteTime;
        this.createdDate = value.createdDate;
        this.lastModifiedBy = value.lastModifiedBy;
        this.lastModifiedDate = value.lastModifiedDate;
    }

    public OtNote(
        Long idNote,
        Long idUser,
        Long idLesson,
        String content,
        Double noteTime,
        LocalDateTime createdDate,
        String lastModifiedBy,
        LocalDateTime lastModifiedDate
    ) {
        this.idNote = idNote;
        this.idUser = idUser;
        this.idLesson = idLesson;
        this.content = content;
        this.noteTime = noteTime;
        this.createdDate = createdDate;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDate = lastModifiedDate;
    }

    /**
     * Getter for <code>s_onthi.ot_note.ID_NOTE</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID_NOTE", nullable = false)
    public Long getIdNote() {
        return this.idNote;
    }

    /**
     * Setter for <code>s_onthi.ot_note.ID_NOTE</code>.
     */
    public void setIdNote(Long idNote) {
        this.idNote = idNote;
    }

    /**
     * Getter for <code>s_onthi.ot_note.ID_USER</code>.
     */
    @Column(name = "ID_USER", nullable = false)
    public Long getIdUser() {
        return this.idUser;
    }

    /**
     * Setter for <code>s_onthi.ot_note.ID_USER</code>.
     */
    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }

    /**
     * Getter for <code>s_onthi.ot_note.ID_LESSON</code>.
     */
    @Column(name = "ID_LESSON", nullable = false)
    public Long getIdLesson() {
        return this.idLesson;
    }

    /**
     * Setter for <code>s_onthi.ot_note.ID_LESSON</code>.
     */
    public void setIdLesson(Long idLesson) {
        this.idLesson = idLesson;
    }

    /**
     * Getter for <code>s_onthi.ot_note.CONTENT</code>.
     */
    @Column(name = "CONTENT", length = 500)
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>s_onthi.ot_note.CONTENT</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>s_onthi.ot_note.NOTE_TIME</code>.
     */
    @Column(name = "NOTE_TIME", nullable = false)
    public Double getNoteTime() {
        return this.noteTime;
    }

    /**
     * Setter for <code>s_onthi.ot_note.NOTE_TIME</code>.
     */
    public void setNoteTime(Double noteTime) {
        this.noteTime = noteTime;
    }

    /**
     * Getter for <code>s_onthi.ot_note.CREATED_DATE</code>.
     */
    @Column(name = "CREATED_DATE", precision = 6)
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Setter for <code>s_onthi.ot_note.CREATED_DATE</code>.
     */
    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * Getter for <code>s_onthi.ot_note.LAST_MODIFIED_BY</code>.
     */
    @Column(name = "LAST_MODIFIED_BY", length = 50)
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }

    /**
     * Setter for <code>s_onthi.ot_note.LAST_MODIFIED_BY</code>.
     */
    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    /**
     * Getter for <code>s_onthi.ot_note.LAST_MODIFIED_DATE</code>.
     */
    @Column(name = "LAST_MODIFIED_DATE", precision = 6)
    public LocalDateTime getLastModifiedDate() {
        return this.lastModifiedDate;
    }

    /**
     * Setter for <code>s_onthi.ot_note.LAST_MODIFIED_DATE</code>.
     */
    public void setLastModifiedDate(LocalDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OtNote other = (OtNote) obj;
        if (this.idNote == null) {
            if (other.idNote != null)
                return false;
        }
        else if (!this.idNote.equals(other.idNote))
            return false;
        if (this.idUser == null) {
            if (other.idUser != null)
                return false;
        }
        else if (!this.idUser.equals(other.idUser))
            return false;
        if (this.idLesson == null) {
            if (other.idLesson != null)
                return false;
        }
        else if (!this.idLesson.equals(other.idLesson))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.noteTime == null) {
            if (other.noteTime != null)
                return false;
        }
        else if (!this.noteTime.equals(other.noteTime))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.lastModifiedBy == null) {
            if (other.lastModifiedBy != null)
                return false;
        }
        else if (!this.lastModifiedBy.equals(other.lastModifiedBy))
            return false;
        if (this.lastModifiedDate == null) {
            if (other.lastModifiedDate != null)
                return false;
        }
        else if (!this.lastModifiedDate.equals(other.lastModifiedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.idNote == null) ? 0 : this.idNote.hashCode());
        result = prime * result + ((this.idUser == null) ? 0 : this.idUser.hashCode());
        result = prime * result + ((this.idLesson == null) ? 0 : this.idLesson.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.noteTime == null) ? 0 : this.noteTime.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.lastModifiedBy == null) ? 0 : this.lastModifiedBy.hashCode());
        result = prime * result + ((this.lastModifiedDate == null) ? 0 : this.lastModifiedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OtNote (");

        sb.append(idNote);
        sb.append(", ").append(idUser);
        sb.append(", ").append(idLesson);
        sb.append(", ").append(content);
        sb.append(", ").append(noteTime);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(lastModifiedBy);
        sb.append(", ").append(lastModifiedDate);

        sb.append(")");
        return sb.toString();
    }
}
