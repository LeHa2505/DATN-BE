/*
 * This file is generated by jOOQ.
 */
package cfm.onthi.entities.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "ot_course",
    schema = "s_onthi",
    indexes = {
        @Index(name = "ID_TEACHER", columnList = "ID_TEACHER ASC")
    }
)
public class OtCourse implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long idCourse;
    private Long idTeacher;
    private Boolean active;
    private Boolean isCheck;
    private String avatarCourse;
    private String categoryName;
    private String schedule;
    private String courseName;
    private Long typeCourse;
    private LocalDate startDate;
    private LocalDate endDate;
    private Double price;
    private Double discount;
    private String description;
    private LocalDateTime createdDate;
    private String lastModifiedBy;
    private LocalDateTime lastModifiedDate;

    public OtCourse() {}

    public OtCourse(OtCourse value) {
        this.idCourse = value.idCourse;
        this.idTeacher = value.idTeacher;
        this.active = value.active;
        this.isCheck = value.isCheck;
        this.avatarCourse = value.avatarCourse;
        this.categoryName = value.categoryName;
        this.schedule = value.schedule;
        this.courseName = value.courseName;
        this.typeCourse = value.typeCourse;
        this.startDate = value.startDate;
        this.endDate = value.endDate;
        this.price = value.price;
        this.discount = value.discount;
        this.description = value.description;
        this.createdDate = value.createdDate;
        this.lastModifiedBy = value.lastModifiedBy;
        this.lastModifiedDate = value.lastModifiedDate;
    }

    public OtCourse(
        Long idCourse,
        Long idTeacher,
        Boolean active,
        Boolean isCheck,
        String avatarCourse,
        String categoryName,
        String schedule,
        String courseName,
        Long typeCourse,
        LocalDate startDate,
        LocalDate endDate,
        Double price,
        Double discount,
        String description,
        LocalDateTime createdDate,
        String lastModifiedBy,
        LocalDateTime lastModifiedDate
    ) {
        this.idCourse = idCourse;
        this.idTeacher = idTeacher;
        this.active = active;
        this.isCheck = isCheck;
        this.avatarCourse = avatarCourse;
        this.categoryName = categoryName;
        this.schedule = schedule;
        this.courseName = courseName;
        this.typeCourse = typeCourse;
        this.startDate = startDate;
        this.endDate = endDate;
        this.price = price;
        this.discount = discount;
        this.description = description;
        this.createdDate = createdDate;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDate = lastModifiedDate;
    }

    /**
     * Getter for <code>s_onthi.ot_course.ID_COURSE</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID_COURSE", nullable = false)
    public Long getIdCourse() {
        return this.idCourse;
    }

    /**
     * Setter for <code>s_onthi.ot_course.ID_COURSE</code>.
     */
    public void setIdCourse(Long idCourse) {
        this.idCourse = idCourse;
    }

    /**
     * Getter for <code>s_onthi.ot_course.ID_TEACHER</code>.
     */
    @Column(name = "ID_TEACHER", nullable = false)
    public Long getIdTeacher() {
        return this.idTeacher;
    }

    /**
     * Setter for <code>s_onthi.ot_course.ID_TEACHER</code>.
     */
    public void setIdTeacher(Long idTeacher) {
        this.idTeacher = idTeacher;
    }

    /**
     * Getter for <code>s_onthi.ot_course.ACTIVE</code>.
     */
    @Column(name = "ACTIVE", nullable = false)
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>s_onthi.ot_course.ACTIVE</code>.
     */
    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * Getter for <code>s_onthi.ot_course.IS_CHECK</code>.
     */
    @Column(name = "IS_CHECK", nullable = false)
    public Boolean getIsCheck() {
        return this.isCheck;
    }

    /**
     * Setter for <code>s_onthi.ot_course.IS_CHECK</code>.
     */
    public void setIsCheck(Boolean isCheck) {
        this.isCheck = isCheck;
    }

    /**
     * Getter for <code>s_onthi.ot_course.AVATAR_COURSE</code>.
     */
    @Column(name = "AVATAR_COURSE", length = 5000)
    public String getAvatarCourse() {
        return this.avatarCourse;
    }

    /**
     * Setter for <code>s_onthi.ot_course.AVATAR_COURSE</code>.
     */
    public void setAvatarCourse(String avatarCourse) {
        this.avatarCourse = avatarCourse;
    }

    /**
     * Getter for <code>s_onthi.ot_course.CATEGORY_NAME</code>.
     */
    @Column(name = "CATEGORY_NAME", length = 100)
    public String getCategoryName() {
        return this.categoryName;
    }

    /**
     * Setter for <code>s_onthi.ot_course.CATEGORY_NAME</code>.
     */
    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    /**
     * Getter for <code>s_onthi.ot_course.SCHEDULE</code>.
     */
    @Column(name = "SCHEDULE", length = 500)
    public String getSchedule() {
        return this.schedule;
    }

    /**
     * Setter for <code>s_onthi.ot_course.SCHEDULE</code>.
     */
    public void setSchedule(String schedule) {
        this.schedule = schedule;
    }

    /**
     * Getter for <code>s_onthi.ot_course.COURSE_NAME</code>.
     */
    @Column(name = "COURSE_NAME", nullable = false, length = 100)
    public String getCourseName() {
        return this.courseName;
    }

    /**
     * Setter for <code>s_onthi.ot_course.COURSE_NAME</code>.
     */
    public void setCourseName(String courseName) {
        this.courseName = courseName;
    }

    /**
     * Getter for <code>s_onthi.ot_course.TYPE_COURSE</code>.
     */
    @Column(name = "TYPE_COURSE")
    public Long getTypeCourse() {
        return this.typeCourse;
    }

    /**
     * Setter for <code>s_onthi.ot_course.TYPE_COURSE</code>.
     */
    public void setTypeCourse(Long typeCourse) {
        this.typeCourse = typeCourse;
    }

    /**
     * Getter for <code>s_onthi.ot_course.START_DATE</code>.
     */
    @Column(name = "START_DATE")
    public LocalDate getStartDate() {
        return this.startDate;
    }

    /**
     * Setter for <code>s_onthi.ot_course.START_DATE</code>.
     */
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for <code>s_onthi.ot_course.END_DATE</code>.
     */
    @Column(name = "END_DATE")
    public LocalDate getEndDate() {
        return this.endDate;
    }

    /**
     * Setter for <code>s_onthi.ot_course.END_DATE</code>.
     */
    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for <code>s_onthi.ot_course.PRICE</code>.
     */
    @Column(name = "PRICE", nullable = false)
    public Double getPrice() {
        return this.price;
    }

    /**
     * Setter for <code>s_onthi.ot_course.PRICE</code>.
     */
    public void setPrice(Double price) {
        this.price = price;
    }

    /**
     * Getter for <code>s_onthi.ot_course.DISCOUNT</code>.
     */
    @Column(name = "DISCOUNT")
    public Double getDiscount() {
        return this.discount;
    }

    /**
     * Setter for <code>s_onthi.ot_course.DISCOUNT</code>.
     */
    public void setDiscount(Double discount) {
        this.discount = discount;
    }

    /**
     * Getter for <code>s_onthi.ot_course.DESCRIPTION</code>.
     */
    @Column(name = "DESCRIPTION")
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>s_onthi.ot_course.DESCRIPTION</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>s_onthi.ot_course.CREATED_DATE</code>.
     */
    @Column(name = "CREATED_DATE", precision = 6)
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Setter for <code>s_onthi.ot_course.CREATED_DATE</code>.
     */
    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * Getter for <code>s_onthi.ot_course.LAST_MODIFIED_BY</code>.
     */
    @Column(name = "LAST_MODIFIED_BY", length = 50)
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }

    /**
     * Setter for <code>s_onthi.ot_course.LAST_MODIFIED_BY</code>.
     */
    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    /**
     * Getter for <code>s_onthi.ot_course.LAST_MODIFIED_DATE</code>.
     */
    @Column(name = "LAST_MODIFIED_DATE", precision = 6)
    public LocalDateTime getLastModifiedDate() {
        return this.lastModifiedDate;
    }

    /**
     * Setter for <code>s_onthi.ot_course.LAST_MODIFIED_DATE</code>.
     */
    public void setLastModifiedDate(LocalDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OtCourse other = (OtCourse) obj;
        if (this.idCourse == null) {
            if (other.idCourse != null)
                return false;
        }
        else if (!this.idCourse.equals(other.idCourse))
            return false;
        if (this.idTeacher == null) {
            if (other.idTeacher != null)
                return false;
        }
        else if (!this.idTeacher.equals(other.idTeacher))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.isCheck == null) {
            if (other.isCheck != null)
                return false;
        }
        else if (!this.isCheck.equals(other.isCheck))
            return false;
        if (this.avatarCourse == null) {
            if (other.avatarCourse != null)
                return false;
        }
        else if (!this.avatarCourse.equals(other.avatarCourse))
            return false;
        if (this.categoryName == null) {
            if (other.categoryName != null)
                return false;
        }
        else if (!this.categoryName.equals(other.categoryName))
            return false;
        if (this.schedule == null) {
            if (other.schedule != null)
                return false;
        }
        else if (!this.schedule.equals(other.schedule))
            return false;
        if (this.courseName == null) {
            if (other.courseName != null)
                return false;
        }
        else if (!this.courseName.equals(other.courseName))
            return false;
        if (this.typeCourse == null) {
            if (other.typeCourse != null)
                return false;
        }
        else if (!this.typeCourse.equals(other.typeCourse))
            return false;
        if (this.startDate == null) {
            if (other.startDate != null)
                return false;
        }
        else if (!this.startDate.equals(other.startDate))
            return false;
        if (this.endDate == null) {
            if (other.endDate != null)
                return false;
        }
        else if (!this.endDate.equals(other.endDate))
            return false;
        if (this.price == null) {
            if (other.price != null)
                return false;
        }
        else if (!this.price.equals(other.price))
            return false;
        if (this.discount == null) {
            if (other.discount != null)
                return false;
        }
        else if (!this.discount.equals(other.discount))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.lastModifiedBy == null) {
            if (other.lastModifiedBy != null)
                return false;
        }
        else if (!this.lastModifiedBy.equals(other.lastModifiedBy))
            return false;
        if (this.lastModifiedDate == null) {
            if (other.lastModifiedDate != null)
                return false;
        }
        else if (!this.lastModifiedDate.equals(other.lastModifiedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.idCourse == null) ? 0 : this.idCourse.hashCode());
        result = prime * result + ((this.idTeacher == null) ? 0 : this.idTeacher.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.isCheck == null) ? 0 : this.isCheck.hashCode());
        result = prime * result + ((this.avatarCourse == null) ? 0 : this.avatarCourse.hashCode());
        result = prime * result + ((this.categoryName == null) ? 0 : this.categoryName.hashCode());
        result = prime * result + ((this.schedule == null) ? 0 : this.schedule.hashCode());
        result = prime * result + ((this.courseName == null) ? 0 : this.courseName.hashCode());
        result = prime * result + ((this.typeCourse == null) ? 0 : this.typeCourse.hashCode());
        result = prime * result + ((this.startDate == null) ? 0 : this.startDate.hashCode());
        result = prime * result + ((this.endDate == null) ? 0 : this.endDate.hashCode());
        result = prime * result + ((this.price == null) ? 0 : this.price.hashCode());
        result = prime * result + ((this.discount == null) ? 0 : this.discount.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.lastModifiedBy == null) ? 0 : this.lastModifiedBy.hashCode());
        result = prime * result + ((this.lastModifiedDate == null) ? 0 : this.lastModifiedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OtCourse (");

        sb.append(idCourse);
        sb.append(", ").append(idTeacher);
        sb.append(", ").append(active);
        sb.append(", ").append(isCheck);
        sb.append(", ").append(avatarCourse);
        sb.append(", ").append(categoryName);
        sb.append(", ").append(schedule);
        sb.append(", ").append(courseName);
        sb.append(", ").append(typeCourse);
        sb.append(", ").append(startDate);
        sb.append(", ").append(endDate);
        sb.append(", ").append(price);
        sb.append(", ").append(discount);
        sb.append(", ").append(description);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(lastModifiedBy);
        sb.append(", ").append(lastModifiedDate);

        sb.append(")");
        return sb.toString();
    }
}
