/*
 * This file is generated by jOOQ.
 */
package cfm.onthi.entities.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "ot_user",
    schema = "s_onthi"
)
public class OtUser implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long idUser;
    private Long idSchool;
    private Long typeUser;
    private String username;
    private String password;
    private String email;
    private String phone;
    private Long grade;
    private Long gender;
    private LocalDate bod;
    private String address;
    private String description;
    private String facebook;
    private String instagram;
    private Boolean active;
    private LocalDateTime createdDate;
    private String lastModifiedBy;
    private LocalDateTime lastModifiedDate;

    public OtUser() {}

    public OtUser(OtUser value) {
        this.idUser = value.idUser;
        this.idSchool = value.idSchool;
        this.typeUser = value.typeUser;
        this.username = value.username;
        this.password = value.password;
        this.email = value.email;
        this.phone = value.phone;
        this.grade = value.grade;
        this.gender = value.gender;
        this.bod = value.bod;
        this.address = value.address;
        this.description = value.description;
        this.facebook = value.facebook;
        this.instagram = value.instagram;
        this.active = value.active;
        this.createdDate = value.createdDate;
        this.lastModifiedBy = value.lastModifiedBy;
        this.lastModifiedDate = value.lastModifiedDate;
    }

    public OtUser(
        Long idUser,
        Long idSchool,
        Long typeUser,
        String username,
        String password,
        String email,
        String phone,
        Long grade,
        Long gender,
        LocalDate bod,
        String address,
        String description,
        String facebook,
        String instagram,
        Boolean active,
        LocalDateTime createdDate,
        String lastModifiedBy,
        LocalDateTime lastModifiedDate
    ) {
        this.idUser = idUser;
        this.idSchool = idSchool;
        this.typeUser = typeUser;
        this.username = username;
        this.password = password;
        this.email = email;
        this.phone = phone;
        this.grade = grade;
        this.gender = gender;
        this.bod = bod;
        this.address = address;
        this.description = description;
        this.facebook = facebook;
        this.instagram = instagram;
        this.active = active;
        this.createdDate = createdDate;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDate = lastModifiedDate;
    }

    /**
     * Getter for <code>s_onthi.ot_user.ID_USER</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID_USER", nullable = false)
    public Long getIdUser() {
        return this.idUser;
    }

    /**
     * Setter for <code>s_onthi.ot_user.ID_USER</code>.
     */
    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }

    /**
     * Getter for <code>s_onthi.ot_user.ID_SCHOOL</code>.
     */
    @Column(name = "ID_SCHOOL")
    public Long getIdSchool() {
        return this.idSchool;
    }

    /**
     * Setter for <code>s_onthi.ot_user.ID_SCHOOL</code>.
     */
    public void setIdSchool(Long idSchool) {
        this.idSchool = idSchool;
    }

    /**
     * Getter for <code>s_onthi.ot_user.TYPE_USER</code>.
     */
    @Column(name = "TYPE_USER")
    public Long getTypeUser() {
        return this.typeUser;
    }

    /**
     * Setter for <code>s_onthi.ot_user.TYPE_USER</code>.
     */
    public void setTypeUser(Long typeUser) {
        this.typeUser = typeUser;
    }

    /**
     * Getter for <code>s_onthi.ot_user.USERNAME</code>.
     */
    @Column(name = "USERNAME", nullable = false, length = 50)
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>s_onthi.ot_user.USERNAME</code>.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for <code>s_onthi.ot_user.PASSWORD</code>.
     */
    @Column(name = "PASSWORD", nullable = false, length = 50)
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>s_onthi.ot_user.PASSWORD</code>.
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>s_onthi.ot_user.EMAIL</code>.
     */
    @Column(name = "EMAIL", nullable = false, length = 50)
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>s_onthi.ot_user.EMAIL</code>.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>s_onthi.ot_user.PHONE</code>.
     */
    @Column(name = "PHONE", length = 15)
    public String getPhone() {
        return this.phone;
    }

    /**
     * Setter for <code>s_onthi.ot_user.PHONE</code>.
     */
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /**
     * Getter for <code>s_onthi.ot_user.GRADE</code>.
     */
    @Column(name = "GRADE")
    public Long getGrade() {
        return this.grade;
    }

    /**
     * Setter for <code>s_onthi.ot_user.GRADE</code>.
     */
    public void setGrade(Long grade) {
        this.grade = grade;
    }

    /**
     * Getter for <code>s_onthi.ot_user.GENDER</code>.
     */
    @Column(name = "GENDER")
    public Long getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>s_onthi.ot_user.GENDER</code>.
     */
    public void setGender(Long gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>s_onthi.ot_user.BOD</code>.
     */
    @Column(name = "BOD")
    public LocalDate getBod() {
        return this.bod;
    }

    /**
     * Setter for <code>s_onthi.ot_user.BOD</code>.
     */
    public void setBod(LocalDate bod) {
        this.bod = bod;
    }

    /**
     * Getter for <code>s_onthi.ot_user.ADDRESS</code>.
     */
    @Column(name = "ADDRESS", length = 500)
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>s_onthi.ot_user.ADDRESS</code>.
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>s_onthi.ot_user.DESCRIPTION</code>.
     */
    @Column(name = "DESCRIPTION", length = 2000)
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>s_onthi.ot_user.DESCRIPTION</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>s_onthi.ot_user.FACEBOOK</code>.
     */
    @Column(name = "FACEBOOK", length = 1000)
    public String getFacebook() {
        return this.facebook;
    }

    /**
     * Setter for <code>s_onthi.ot_user.FACEBOOK</code>.
     */
    public void setFacebook(String facebook) {
        this.facebook = facebook;
    }

    /**
     * Getter for <code>s_onthi.ot_user.INSTAGRAM</code>.
     */
    @Column(name = "INSTAGRAM", length = 1000)
    public String getInstagram() {
        return this.instagram;
    }

    /**
     * Setter for <code>s_onthi.ot_user.INSTAGRAM</code>.
     */
    public void setInstagram(String instagram) {
        this.instagram = instagram;
    }

    /**
     * Getter for <code>s_onthi.ot_user.ACTIVE</code>.
     */
    @Column(name = "ACTIVE", nullable = false)
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>s_onthi.ot_user.ACTIVE</code>.
     */
    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * Getter for <code>s_onthi.ot_user.CREATED_DATE</code>.
     */
    @Column(name = "CREATED_DATE", precision = 6)
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Setter for <code>s_onthi.ot_user.CREATED_DATE</code>.
     */
    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * Getter for <code>s_onthi.ot_user.LAST_MODIFIED_BY</code>.
     */
    @Column(name = "LAST_MODIFIED_BY", length = 50)
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }

    /**
     * Setter for <code>s_onthi.ot_user.LAST_MODIFIED_BY</code>.
     */
    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    /**
     * Getter for <code>s_onthi.ot_user.LAST_MODIFIED_DATE</code>.
     */
    @Column(name = "LAST_MODIFIED_DATE", precision = 6)
    public LocalDateTime getLastModifiedDate() {
        return this.lastModifiedDate;
    }

    /**
     * Setter for <code>s_onthi.ot_user.LAST_MODIFIED_DATE</code>.
     */
    public void setLastModifiedDate(LocalDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OtUser other = (OtUser) obj;
        if (this.idUser == null) {
            if (other.idUser != null)
                return false;
        }
        else if (!this.idUser.equals(other.idUser))
            return false;
        if (this.idSchool == null) {
            if (other.idSchool != null)
                return false;
        }
        else if (!this.idSchool.equals(other.idSchool))
            return false;
        if (this.typeUser == null) {
            if (other.typeUser != null)
                return false;
        }
        else if (!this.typeUser.equals(other.typeUser))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!this.phone.equals(other.phone))
            return false;
        if (this.grade == null) {
            if (other.grade != null)
                return false;
        }
        else if (!this.grade.equals(other.grade))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.bod == null) {
            if (other.bod != null)
                return false;
        }
        else if (!this.bod.equals(other.bod))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.facebook == null) {
            if (other.facebook != null)
                return false;
        }
        else if (!this.facebook.equals(other.facebook))
            return false;
        if (this.instagram == null) {
            if (other.instagram != null)
                return false;
        }
        else if (!this.instagram.equals(other.instagram))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.lastModifiedBy == null) {
            if (other.lastModifiedBy != null)
                return false;
        }
        else if (!this.lastModifiedBy.equals(other.lastModifiedBy))
            return false;
        if (this.lastModifiedDate == null) {
            if (other.lastModifiedDate != null)
                return false;
        }
        else if (!this.lastModifiedDate.equals(other.lastModifiedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.idUser == null) ? 0 : this.idUser.hashCode());
        result = prime * result + ((this.idSchool == null) ? 0 : this.idSchool.hashCode());
        result = prime * result + ((this.typeUser == null) ? 0 : this.typeUser.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.grade == null) ? 0 : this.grade.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.bod == null) ? 0 : this.bod.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.facebook == null) ? 0 : this.facebook.hashCode());
        result = prime * result + ((this.instagram == null) ? 0 : this.instagram.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.lastModifiedBy == null) ? 0 : this.lastModifiedBy.hashCode());
        result = prime * result + ((this.lastModifiedDate == null) ? 0 : this.lastModifiedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OtUser (");

        sb.append(idUser);
        sb.append(", ").append(idSchool);
        sb.append(", ").append(typeUser);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(email);
        sb.append(", ").append(phone);
        sb.append(", ").append(grade);
        sb.append(", ").append(gender);
        sb.append(", ").append(bod);
        sb.append(", ").append(address);
        sb.append(", ").append(description);
        sb.append(", ").append(facebook);
        sb.append(", ").append(instagram);
        sb.append(", ").append(active);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(lastModifiedBy);
        sb.append(", ").append(lastModifiedDate);

        sb.append(")");
        return sb.toString();
    }
}
